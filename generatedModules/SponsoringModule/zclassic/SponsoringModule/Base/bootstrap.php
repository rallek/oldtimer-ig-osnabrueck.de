<?php
/**
 * Sponsoring.
 *
 * @copyright Ralf Koester (RK)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Ralf Koester <ralf@familie-koester.de>.
 * @link http://oldtimer-ig-osnabrueck.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

/**
 * Bootstrap called when application is first initialised at runtime.
 *
 * This is only called once, and only if the core has reason to initialise this module,
 * usually to dispatch a controller request or API.
 */
sponsoPerformRegularAmendments();

/**
 * Performs regular amendments, like archiving obsolete data.
 */
function sponsoPerformRegularAmendments()
{
    $currentType = FormUtil::getPassedValue('type', 'user', 'GETPOST', FILTER_SANITIZE_STRING);
    $currentFunc = FormUtil::getPassedValue('func', 'index', 'GETPOST', FILTER_SANITIZE_STRING);
    if ($currentType == 'admin' || $currentFunc == 'edit' || $currentFunc == 'initialize') {
        return;
    }

    $randProbability = mt_rand(1, 1000);

    if ($randProbability < 750) {
        return;
    }

    PageUtil::registerVar('RKSponsoringModuleAutomaticArchiving', false, true);
    $serviceManager = ServiceUtil::getManager();
    // check if own services exist (which is not true if the module is not installed yet)
    if (!$serviceManager->has('rk_sponsoring_module.workflow_helper')) {
        return;
    }
    $workflowHelper = $serviceManager->get('rk_sponsoring_module.workflow_helper');

    if (!$serviceManager->has('rk_sponsoring_module.hook_helper')) {
        return;
    }
    $hookHelper = $serviceManager->get('rk_sponsoring_module.hook_helper');

    $logger = $serviceManager->get('logger');
    $permissionApi = $serviceManager->get('zikula_permissions_module.api.permission');
    $session = $serviceManager->get('session');
    $translator = $serviceManager->get('translator.default');

    if (!$serviceManager->has('rk_sponsoring_module.sponsor_factory')) {
        return;
    }

    // perform update for sponsors becoming archived
    $logger->notice('{app}: Automatic archiving for the {entity} entity started.', ['app' => 'RKSponsoringModule', 'entity' => 'sponsor']);
    $repository = $serviceManager->get('rk_sponsoring_module.sponsor_factory')->getRepository();
    $repository->archiveObjects($permissionApi, $session, $translator, $workflowHelper, $hookHelper);
    $logger->notice('{app}: Automatic archiving for the {entity} entity completed.', ['app' => 'RKSponsoringModule', 'entity' => 'sponsor']);
    PageUtil::setVar('RKSponsoringModuleAutomaticArchiving', false);
}

